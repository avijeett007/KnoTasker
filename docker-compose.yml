version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: knotasker-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: knotasker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - knotasker-network

  db-init:
    build:
      context: .
      dockerfile: db/Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: knotasker
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/knotasker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - knotasker-network

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: knotasker-client
    ports:
      - "80:80"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/knotasker
      NODE_ENV: production
    depends_on:
      - db-init
    networks:
      - knotasker-network

networks:
  knotasker-network:
    driver: bridge

volumes:
  postgres_data:
